plugins {
    id "com.android.application"
    id "kotlin-android"
    id "org.jetbrains.kotlin.android" // Ensure Kotlin plugin is applied
    id "com.google.gms.google-services" // Flutter Gradle plugin is automatically added during Flutter build
}

android {
    namespace "com.example.flutter_app" // Corrected namespace

    compileSdk 33 // Replace with actual compile SDK version
    ndkVersion "21.4.7075529" // You can change this as needed

    defaultConfig {
        applicationId "com.example.flutter_app"
        minSdk 21 // Replace with actual minimum SDK version
        targetSdk 33 // Replace with actual target SDK version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    androidComponents {
        onVariants { variant ->
            if (variant.buildType == "release") {
                variant.outputs.all { output ->
                    output.outputFileName = "flutter_app_release.apk"
                }
            } else if (variant.buildType == "debug") {
                variant.outputs.all { output ->
                    output.outputFileName = "flutter_app_debug.apk"
                }
            }
        }
    }

    // Setting build directory to custom path
    buildDir = "F:/flutter_builds/"
}

dependencies {
    implementation 'androidx.window:window:1.0.0'
    // Add any other dependencies you need here
}

kotlinOptions {
    jvmTarget = "1.8"
}



// task copyReleaseApk(type: Copy) {
//     from("$buildDir/outputs/apk/release") {
//         include "*.apk"
//     }
//     into "$rootDir/flutter_builds"
// }


// assembleRelease.finalizedBy(copyReleaseApk)

flutter {
    source = "../.."
}
